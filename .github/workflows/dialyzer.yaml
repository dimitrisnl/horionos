jobs:
  dialyzer:
    name: Dialyzer (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ["27.0.x"]
        elixir: ["1.17.0"]
    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Restore PLT cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Create dialyzer.ignore-warnings file
        run: touch dialyzer.ignore-warnings

      - name: Print Elixir and Erlang versions
        run: |
          elixir --version
          erl -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().' -noshell

      - name: Run dialyzer
        run: mix dialyzer --format github --verbose
